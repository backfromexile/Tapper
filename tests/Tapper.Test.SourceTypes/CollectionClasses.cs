// <auto-generated>
// THIS (.cs) FILE IS GENERATED BY Tapper.Test.SourceTypes
// </auto-generated>
#nullable enable
using System;
using System.Collections.Generic;

namespace Tapper.Tests.SourceTypes;

#pragma warning disable CS8618 // Non-nullable field must contain a non-null value when exiting constructor. Consider declaring as nullable.

[TranspilationSource]
public class ClassIncludeCollectionFieldArray
{
    public Array FieldOfArray;
}

[TranspilationSource]
public class ClassIncludeCollectionFieldArraySegmentint
{
    public ArraySegment<int> FieldOfArraySegmentint;
}

[TranspilationSource]
public class ClassIncludeCollectionFieldListfloat
{
    public List<float> FieldOfListfloat;
}

[TranspilationSource]
public class ClassIncludeCollectionFieldLinkedListstring
{
    public LinkedList<string> FieldOfLinkedListstring;
}

[TranspilationSource]
public class ClassIncludeCollectionFieldQueueGuid
{
    public Queue<Guid> FieldOfQueueGuid;
}

[TranspilationSource]
public class ClassIncludeCollectionFieldStackUri
{
    public Stack<Uri> FieldOfStackUri;
}

[TranspilationSource]
public class ClassIncludeCollectionFieldHashSetDateTime
{
    public HashSet<DateTime> FieldOfHashSetDateTime;
}

[TranspilationSource]
public class ClassIncludeCollectionFieldIEnumerablebool
{
    public IEnumerable<bool> FieldOfIEnumerablebool;
}

[TranspilationSource]
public class ClassIncludeCollectionFieldIReadOnlyCollectionbyte
{
    public IReadOnlyCollection<byte> FieldOfIReadOnlyCollectionbyte;
}

[TranspilationSource]
public class ClassIncludeCollectionFieldIReadOnlyListobject
{
    public IReadOnlyList<object> FieldOfIReadOnlyListobject;
}

[TranspilationSource]
public class ClassIncludeCollectionFieldICollectionstring
{
    public ICollection<string> FieldOfICollectionstring;
}

[TranspilationSource]
public class ClassIncludeCollectionFieldIListbool
{
    public IList<bool> FieldOfIListbool;
}

[TranspilationSource]
public class ClassIncludeCollectionFieldISetsbyte
{
    public ISet<sbyte> FieldOfISetsbyte;
}

[TranspilationSource]
public class ClassIncludeCollectionPropertyArray
{
    public Array PropertyOfArray { get; set; }
}

[TranspilationSource]
public class ClassIncludeCollectionPropertyArraySegmentint
{
    public ArraySegment<int> PropertyOfArraySegmentint { get; set; }
}

[TranspilationSource]
public class ClassIncludeCollectionPropertyListfloat
{
    public List<float> PropertyOfListfloat { get; set; }
}

[TranspilationSource]
public class ClassIncludeCollectionPropertyLinkedListstring
{
    public LinkedList<string> PropertyOfLinkedListstring { get; set; }
}

[TranspilationSource]
public class ClassIncludeCollectionPropertyQueueGuid
{
    public Queue<Guid> PropertyOfQueueGuid { get; set; }
}

[TranspilationSource]
public class ClassIncludeCollectionPropertyStackUri
{
    public Stack<Uri> PropertyOfStackUri { get; set; }
}

[TranspilationSource]
public class ClassIncludeCollectionPropertyHashSetDateTime
{
    public HashSet<DateTime> PropertyOfHashSetDateTime { get; set; }
}

[TranspilationSource]
public class ClassIncludeCollectionPropertyIEnumerablebool
{
    public IEnumerable<bool> PropertyOfIEnumerablebool { get; set; }
}

[TranspilationSource]
public class ClassIncludeCollectionPropertyIReadOnlyCollectionbyte
{
    public IReadOnlyCollection<byte> PropertyOfIReadOnlyCollectionbyte { get; set; }
}

[TranspilationSource]
public class ClassIncludeCollectionPropertyIReadOnlyListobject
{
    public IReadOnlyList<object> PropertyOfIReadOnlyListobject { get; set; }
}

[TranspilationSource]
public class ClassIncludeCollectionPropertyICollectionstring
{
    public ICollection<string> PropertyOfICollectionstring { get; set; }
}

[TranspilationSource]
public class ClassIncludeCollectionPropertyIListbool
{
    public IList<bool> PropertyOfIListbool { get; set; }
}

[TranspilationSource]
public class ClassIncludeCollectionPropertyISetsbyte
{
    public ISet<sbyte> PropertyOfISetsbyte { get; set; }
}

#pragma warning restore CS8618 // Non-nullable field must contain a non-null value when exiting constructor. Consider declaring as nullable.
